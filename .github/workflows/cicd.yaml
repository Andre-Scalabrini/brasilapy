name: Tests
run-name: ${{ github.actor }} started the tests
on:
  push:
  pull_request:
jobs:
  Precommit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: pip install pre-commit
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Validate pre-commit configuration file
        run: pre-commit validate-config
      - name: Run Pre-commit
        run: pre-commit run --all-files
  Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: pip install poetry
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install project dependencies
        run: poetry install --with=dev
      - name: Execute tests with coverage
        run: poetry run pytest --cov --cov-report=xml --cov-report=term .
      - name: Report Coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v3
      - uses: actions/upload-artifact@master
        with:
          name: coverage-results
          path: coverage.xml
#      - name: Run mypy validation
#        run: poetry run mypy .
  SonarCloud:
    needs: [Tests]
    name: SonarCloud Analisys
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@master
        with:
          name: coverage-results
          path: coverage.xml
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_SONAR }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_GH }}
  Deployment:
    needs: [Precommit, Tests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - run: pip install poetry
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Project deployment
        env:
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: poetry publish --build --username "__token__" --password "${{ env.PYPI_PASSWORD }}"
